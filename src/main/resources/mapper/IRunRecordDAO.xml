<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yanweijia.slimming.dao.IRunRecordDAO">
    <resultMap id="BaseResultMap" type="cn.yanweijia.slimming.model.RunRecord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="startTime" jdbcType="TIMESTAMP" property="starttime"/>
        <result column="endTime" jdbcType="TIMESTAMP" property="endtime"/>
        <result column="distance" jdbcType="DECIMAL" property="distance"/>
        <result column="calorie" jdbcType="DECIMAL" property="calorie"/>
        <result column="speed" jdbcType="DECIMAL" property="speed"/>
        <result column="pace" jdbcType="DECIMAL" property="pace"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.yanweijia.slimming.model.RunRecord">
        <result column="road" jdbcType="LONGVARCHAR" property="road"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_id, startTime, endTime, distance, calorie, speed, pace, remark
  </sql>
    <sql id="Blob_Column_List">
    road
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="cn.yanweijia.slimming.model.RunRecordExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from run_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="cn.yanweijia.slimming.model.RunRecordExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from run_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from run_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from run_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.yanweijia.slimming.model.RunRecordExample">
        delete from run_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.yanweijia.slimming.model.RunRecord">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into run_record (user_id, startTime, endTime,
        distance, calorie, speed,
        pace, remark, road
        )
        values (#{userId,jdbcType=INTEGER}, #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP},
        #{distance,jdbcType=DECIMAL}, #{calorie,jdbcType=DECIMAL}, #{speed,jdbcType=DECIMAL},
        #{pace,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{road,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.yanweijia.slimming.model.RunRecord">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into run_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="starttime != null">
                startTime,
            </if>
            <if test="endtime != null">
                endTime,
            </if>
            <if test="distance != null">
                distance,
            </if>
            <if test="calorie != null">
                calorie,
            </if>
            <if test="speed != null">
                speed,
            </if>
            <if test="pace != null">
                pace,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="road != null">
                road,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="starttime != null">
                #{starttime,jdbcType=TIMESTAMP},
            </if>
            <if test="endtime != null">
                #{endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="distance != null">
                #{distance,jdbcType=DECIMAL},
            </if>
            <if test="calorie != null">
                #{calorie,jdbcType=DECIMAL},
            </if>
            <if test="speed != null">
                #{speed,jdbcType=DECIMAL},
            </if>
            <if test="pace != null">
                #{pace,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="road != null">
                #{road,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.yanweijia.slimming.model.RunRecordExample"
            resultType="java.lang.Long">
        select count(*) from run_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update run_record
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.starttime != null">
                startTime = #{record.starttime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endtime != null">
                endTime = #{record.endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.distance != null">
                distance = #{record.distance,jdbcType=DECIMAL},
            </if>
            <if test="record.calorie != null">
                calorie = #{record.calorie,jdbcType=DECIMAL},
            </if>
            <if test="record.speed != null">
                speed = #{record.speed,jdbcType=DECIMAL},
            </if>
            <if test="record.pace != null">
                pace = #{record.pace,jdbcType=DECIMAL},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.road != null">
                road = #{record.road,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update run_record
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
        distance = #{record.distance,jdbcType=DECIMAL},
        calorie = #{record.calorie,jdbcType=DECIMAL},
        speed = #{record.speed,jdbcType=DECIMAL},
        pace = #{record.pace,jdbcType=DECIMAL},
        remark = #{record.remark,jdbcType=VARCHAR},
        road = #{record.road,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update run_record
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        startTime = #{record.starttime,jdbcType=TIMESTAMP},
        endTime = #{record.endtime,jdbcType=TIMESTAMP},
        distance = #{record.distance,jdbcType=DECIMAL},
        calorie = #{record.calorie,jdbcType=DECIMAL},
        speed = #{record.speed,jdbcType=DECIMAL},
        pace = #{record.pace,jdbcType=DECIMAL},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.yanweijia.slimming.model.RunRecord">
        update run_record
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="starttime != null">
                startTime = #{starttime,jdbcType=TIMESTAMP},
            </if>
            <if test="endtime != null">
                endTime = #{endtime,jdbcType=TIMESTAMP},
            </if>
            <if test="distance != null">
                distance = #{distance,jdbcType=DECIMAL},
            </if>
            <if test="calorie != null">
                calorie = #{calorie,jdbcType=DECIMAL},
            </if>
            <if test="speed != null">
                speed = #{speed,jdbcType=DECIMAL},
            </if>
            <if test="pace != null">
                pace = #{pace,jdbcType=DECIMAL},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="road != null">
                road = #{road,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.yanweijia.slimming.model.RunRecord">
    update run_record
    set user_id = #{userId,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      distance = #{distance,jdbcType=DECIMAL},
      calorie = #{calorie,jdbcType=DECIMAL},
      speed = #{speed,jdbcType=DECIMAL},
      pace = #{pace,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      road = #{road,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="cn.yanweijia.slimming.model.RunRecord">
    update run_record
    set user_id = #{userId,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      endTime = #{endtime,jdbcType=TIMESTAMP},
      distance = #{distance,jdbcType=DECIMAL},
      calorie = #{calorie,jdbcType=DECIMAL},
      speed = #{speed,jdbcType=DECIMAL},
      pace = #{pace,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>